package exec

import (
	"log"
	"os"

	"github.com/hashicorp/hcl/v2/hclwrite"
	"github.com/zclconf/go-cty/cty"
)

func CreateFile(resources []string, provider, region, key, value, chaosfile string) {

	chaosFile := hclwrite.NewEmptyFile()

	hclFile, err := os.OpenFile(chaosfile, os.O_CREATE|os.O_WRONLY, 0644)
	if err != nil {
		log.Println("Error: ", err)
	}
	rootBody := chaosFile.Body()
	// Setting app and description
	rootBody.SetAttributeValue("App", cty.StringVal("ChaosTF"))
	rootBody.SetAttributeValue("Description", cty.StringVal("Automatically generated by ChaosTF"))
	rootBody.AppendNewline()
	for _, service := range resources {
		job := rootBody.AppendNewBlock("job", []string{provider, service})
		jobBody := job.Body()
		jobBody.SetAttributeValue("region", cty.StringVal(region))
		jobConfig := jobBody.AppendNewBlock("config", nil)
		configBody := jobConfig.Body()
		tag := key + ":" + value
		configBody.SetAttributeValue("tag", cty.StringVal(tag))
		configBody.SetAttributeValue("chaos", cty.StringVal("terminate"))
		configBody.SetAttributeValue("count", cty.NumberIntVal(1))
		rootBody.AppendNewline()
	}

	hclFile.Write(chaosFile.Bytes())
}
